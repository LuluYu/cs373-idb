FORMAT: 1A
HOST: http://www.google.com

# Flappy World
Notes API is a *short texts saving* service similar to its physical paper presence on your table.

# Group Languages
Examples related to the languages of the **Flappy World API**

## Languages Collection [/api/languages]
### List all Languages[GET]
+ Response 200 (application/json)

        [{
          "id": 1, "name": "Chinese", "description": "...", ...
        }, {
          "id": 2, "name": "Spanish", "description": "...", ...
        }]

+ Response 400 (application/json)
    
        {"error": "Data does not exist. Bad Request."}

## Language [/api/languages/id/{id}]
A single Language object with all its details

### Retrieve a Language by id[GET]
+ Parameters
    + id (required, number, `2`) ... Numeric `id` of the Language to perform action with. Has example value.

+ Response 200 (application/json)

    + Header

            X-My-Header: The Value

    + Body

            { "id": 2, "name": "Spanish", "script": "Latin Alphabet", "description": "Something about Spanish xD", "area": [1, 3, 4], "picture": "http://picture.link.here.jpg" }

+ Response 400 (application/json)

        {"id": 351, "error": "Language with id 351 does not exist in the database."}

## Language [/api/languages/name/{name}]
A single Language object with all its details
### Retrieve a Language by name [GET]
+ Parameters
    + name (required, string, `Spanish`) ... String `name` of the Language perform action with. Has example value.
    
+ Response 200 (application/json)

    + Header

            X-My-Header: The Value

    + Body

            { "id": 2, "name": "Spanish", "script": "Latin Alphabet", "description": "Something about Spanish xD", "area": [1, 3, 4], "picture": "http://picture.link.here.jpg" }

+ Response 400 (application/json)

        { "name": Tibetan, "error": "Language with name Tibetan does not exist in the database."}


# Group Cities 
Examples related to the cities of the **Flappy World API** 

## Cities Collection [/api/cities] 
### List all Cities[GET] 
+ Response 200 (application/json) 

        [{
            "id": 1, "name": "Li Juang", "description": "some text", ... 
        }, {
            "id": 2, "name": "Chichen Itza", "description": "some text", ...
        }] 

+ Response 400 (application/json)
    
        {"error": "Data does not exist. Bad Request."}

## City [/api/cities/id/{id}] 
A single City object with all its details 

### Retrieve a City by id[GET] 
+ Parameters 
    + id (required, number, `2`) ... Numeric `id` of the City to perform action with. 
    
+ Response 200 (application/json) 

    + Header 
        
            X-My-Header: The Value 
            
    + Body 
        
            { "id": 2, "name": "Chichen Itza", "description": "some text", ... } 

+ Response 400 (application/json)

        {"id": 351, "error": "City with id 351 does not exist in the database."}

## City [/api/cities/name/{name}] 
A single City object with all its details 

### Retrieve a City by name[GET] 
+ Parameters 
    + name (required, string, `Chichen Itza`) ... String `name` of the City to perform action with. 
    
+ Response 200 (application/json) 

    + Header 
        
            X-My-Header: The Value 
            
    + Body 
        
            { "id": 2, "name": "Chichen Itza", "description": "some text", ... } 

+ Response 400 (application/json)

        { "name": Austin, "error": "City with name Austin does not exist in the database."}

# Group Acitvities 
Examples related to the activities of the **Flappy World API** 

## Activity Types Collection [/api/activities]
### List all types of Activities[GET]
+ Response 200 (application/json)

        [{
          "name": "Scenery", "activities": [{id1}, {id2},... ], ...
        }, {
          "name": "Housing", "activities": [{id1}, {id2},... ], ...
        }]

+ Response 400 (application/json)
    
        {"error": "Data does not exist. Bad Request."}

## Activities Collection [/api/activities/type/{type}] 
### List all Activities of a given type[GET] 
+ Parameters 
    + type (required, string, `Scenery`) ... String `type` of the activity to perform action with. 

+ Response 200 (application/json) 
    
    + Header
           
            X-My-Header: The Value 

    + Body 

            [{
                "id": 1, "name": "Some scenery activity", "description": "some text", "type": "Scenery", ... 
            }, {
                "id": 2, "name": "Some other scenery activity", "description": "some text", "type": "Scenery", ... 
            }] 

## Activity [/api/activities/id/{id}] 
A single Activity object with all its details 

### Retrieve an Activity by id[GET] 
+ Parameters 
    + id (required, number, `1`) ... Numeric `id` of the Activity to perform action with. 
    
+ Response 200 (application/json) 

    + Header 
        
            X-My-Header:The Value 
        
    + Body 
    
            { "id":1, "name": "Some scenery activity", "description": some text", "type": "Scenery", ... } 
            
            
